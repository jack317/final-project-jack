{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Desktop/final_assignment/final/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './static/Home.css';\nimport axios from 'axios';\nimport { LoadBlanks } from '../components/LoadBlanks';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getParagraphOutput = () => {\n      axios.get('/api/Paragraph/').then(response => this.setState({\n        output: response.data\n      })).then(() => this.setState({\n        count: this.state.output.length\n      })).then(() => this.setState({\n        random: Math.floor(Math.random() * this.state.count) + 1\n      })).then(() => console.log(Math.floor(Math.random() * this.state.count) + 1)).then(() => console.log(this.state.random)).then(() => this.loadText());\n    };\n\n    this.handleRandom = () => {\n      this.getParagraphOutput();\n    };\n\n    this.loadText = () => {\n      axios.get(`/api/Paragraph/${this.state.random}`).then(res => this.setState({\n        activeLib: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.state = {\n      activeLib: {\n        title: \"\",\n        body: \"\"\n      },\n      id: 1,\n      output: [],\n      count: 10,\n      random: 2\n    };\n  }\n\n  componentDidMount() {\n    this.getParagraphOutput();\n  } // function gets all of the objects from the paragraphs table\n  // then counts how many objects there are and uses that to get a random madlib\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"main-card\",\n      style: {\n        width: '50rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"madlib-title\",\n          children: this.state.activeLib.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LoadBlanks, {\n          passTitle: this.state.activeLib.title,\n          passText: this.state.activeLib.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"madlib-random-button madlib-button\",\n          onClick: this.handleRandom,\n          children: \"Random MadLib!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"names":["React","Component","Card","axios","LoadBlanks","Button","Home","constructor","props","getParagraphOutput","get","then","response","setState","output","data","count","state","length","random","Math","floor","console","log","loadText","handleRandom","res","activeLib","catch","err","title","body","id","componentDidMount","render","width"],"sources":["/Users/jack/Desktop/final_assignment/final/src/pages/Home.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './static/Home.css';\nimport axios from 'axios';\nimport { LoadBlanks } from '../components/LoadBlanks';\nimport { Button } from \"react-bootstrap\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeLib: {\n                title: \"\",\n                body: \"\",\n            },\n            id: 1,\n            output: [],\n            count: 10,\n            random: 2,\n        };\n      }\n\n    componentDidMount() {\n        this.getParagraphOutput();\n    }\n\n    // function gets all of the objects from the paragraphs table\n    // then counts how many objects there are and uses that to get a random madlib\n    getParagraphOutput = () => {\n        axios\n            .get('/api/Paragraph/')\n            .then((response) => this.setState({ output: response.data }))\n            .then(() => this.setState({ count: this.state.output.length }))\n            .then(() => this.setState({ random: Math.floor(Math.random() * this.state.count)+1 }))\n            .then(() => console.log(Math.floor(Math.random() * this.state.count)+1))\n            .then(() => console.log(this.state.random))\n            .then(() => this.loadText());\n    };\n\n    handleRandom = () => {\n        this.getParagraphOutput();\n\n    }\n    \n    // function to load the specific madLib that has been chosen at random. Sets the state\n    // of the activeLib array to be pushed as props later\n    loadText = () => {\n        axios\n            .get(`/api/Paragraph/${this.state.random}`)\n            .then((res) => this.setState({ activeLib: res.data }))\n            .catch((err) => console.log(err));\n    };\n\n    \n    render() {\n        return (\n            <Card className=\"main-card\" style={{ width: '50rem' }}>\n                <Card.Body>\n                    <Card.Title className=\"madlib-title\">{this.state.activeLib.title}</Card.Title>\n                        <LoadBlanks\n                            passTitle={this.state.activeLib.title}\n                            passText={this.state.activeLib.body}\n                        />\n                        <Button\n                            className=\"madlib-random-button madlib-button\"\n                            onClick={this.handleRandom}>\n                        Random MadLib!\n                        </Button>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}